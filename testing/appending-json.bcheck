metadata:
    language: v1-beta
    name: "Laravel Environment file exposed"
    description: "Laravel .env file holds confidential data such as database credentials and tokens and should not be accessible to the public"
    author: "j3ssie"
    tags: "exposure", "laravel", "env", "file"

run for each:
    potential_path =
        ".env",
        "api/.env",
        "laravel/.env",
        "test/.env",
        "vendor/.env",
        "sites/.env",
        ".env.dev.local",
        ".env.development.local",
        ".env.prod.local",
        ".env.production.local",
        ".env.local",
        ".env.example",
        ".env.stage",
        ".env.live",
        ".env",
        ".env.bak",
        ".env.dev",
        ".env.dev.local",
        ".env.development.local",
        ".env.prod",
        ".env.prod.local",
        ".env.production",
        ".env.production.local",
        ".env.local",
        ".env.example",
        ".env.stage",
        ".env.live",
        ".env.backup",
        ".env.save",
        ".env.old",
        ".env.www",
        ".env_1",
        ".env_sample",
        "api/.env"

given request then
    # replace the potential path with the last path
    send request called check:
        method: "GET"
        replacing path: `{regex_replace({regex_replace({base.request.url}, "^.*?\/.*?\/.*?\/", "/")}, "([^/]+)$", "")}{potential_path}`

    # replace the potential path with entire URI
    send request called check:
        method: "GET"
        replacing path: `{regex_replace({base.request.url}, "^.*", "")}/{potential_path}`

    if {check.response.status_code} is "200" and
        "APP_ENV" in {check.response.body} then
        if {check.response.headers} matches "text/plain" or
            {check.response.headers} matches "octet-stream" then
            report issue:
                severity: high
                confidence: tentative
                detail: `Laravel Environment file exposed at {potential_path}.`
        end if
    end if
